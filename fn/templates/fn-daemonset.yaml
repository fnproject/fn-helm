apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: {{ template "fullname" . }}-api
spec:
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  minReadySeconds: 10
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
        chart: {{ .Chart.Name }}-{{ .Chart.Version }}
        heritage: {{ .Release.Service }}
        release: {{ .Release.Name }}
        role: fn-service
    spec:
      {{- if .Values.fnserver.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.fnserver.nodeSelector | indent 8 }}
{{- end }}
      {{- if .Values.fnserver.tolerations }}
      tolerations:
{{ toYaml .Values.fnserver.tolerations | indent 8 }}
{{- end }}
      containers:
      - name: fn-service
        image: {{ .Values.fnserver.image }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        resources:
{{ toYaml .Values.fnserver.resources | indent 12 }}
        securityContext:
          privileged: true
        ports:
        - containerPort: 80
        readinessProbe:
          httpGet:
            path: /v1/apps
            port: 80
          initialDelaySeconds: 3
          periodSeconds: 3
        env:
        - name: LOG_LEVEL
          value: {{ .Values.fnserver.logLevel }}
        - name: FN_PORT
          value: "80"
        - name: FN_DB_PASSWD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-mysql
              key: mysql-password
        - name: FN_DB_HOST
          value: {{ .Release.Name }}-mysql
        - name: FN_DB_URL
{{ if .Values.mysql_operator.enabled }}
          value: mysql://fnapp:$(FN_DB_PASSWD)@tcp(127.0.0.1:6446)/fndb
{{ else }}
          value: mysql://fnapp:$(FN_DB_PASSWD)@tcp($(FN_DB_HOST):3306)/fndb
{{ end }}
        - name: FN_MQ_HOST
          value: {{ .Release.Name }}-redis
#  TODO:
#        - name: MQ_PASSWD
#          valueFrom:
#            secretKeyRef:
#              name: {{ .Release.Name }}-redis
#              key: redis-password
        - name: FN_MQ_URL
          value: redis://$(FN_MQ_HOST):6379/
{{ if .Values.mysql_operator.enabled }}
      # Add the mysql helper
      - name: mysqlrouter
        image: pulsepointinc/mysql-router:2.1.3
        env:
        - name: DB_ROOT_PASSWD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-mysql-root-password
              key: password
        - name: FN_DB_PASSWD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-mysql
              key: mysql-password
        - name: FN_DB_HOST
          value: {{ .Release.Name }}-mysql
        command:
        - "/bin/bash"
        - "-cx"
        - |
          set -e
          echo "Bootstraping the router"
          echo $DB_ROOT_PASSWD | mysqlrouter --bootstrap $FN_DB_HOST-0.$FN_DB_HOST:3306 --user=root
          search=$(grep search /etc/resolv.conf)
          echo "$search $FN_DB_HOST.{{ .Release.Namespace }}.svc.cluster.local" >> /etc/resolv.conf
          echo "Running the router"
          mysqlrouter --user=root
{{ end }}

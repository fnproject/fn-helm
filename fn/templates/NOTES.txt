Your K8s cluster MUST have configured with NGINX ingress controller.
See https://github.com/helm/charts/tree/master/stable/nginx-ingress.

For SSL/TLS support please take a look at:
https://medium.com/oracledevs/secure-your-kubernetes-services-using-cert-manager-nginx-ingress-and-lets-encrypt-888c8b996260

The Fn service can be accessed within your cluster at:

 - http://{{template  "fullname" .}}:{{ .Values.fn_api.service.port}}

Then you need to update your environment variable `HTTP_HOST` with the corresponding ingress controller endpoint or an IP address:

    export {HTTP,HTTPS}_proxy=$(kubectl get svc <ingress-nginx-ingress-controller> -o jsonpath='http://{.status.loadBalancer.ingress[0].ip}:80')


Then you need to create Fn CLI context:

    fn create context {{ template "fullname" . }} --api-url http://{{ .Values.fn_api.service.ingress_hostname }} --provider default --registry <your-docker-registry>
    fn use context {{ template "fullname" . }}

Next thing would be to test the connectivity between your host and the deployment using simple API query:

    fn list apps

And the last thing would be to check whether you can call a functions:

    fn init --runtime go --trigger http first-fn
    cd first-fn
    fn --verbose deploy --app first-app
    fn inspect fn first-app first-fn

You need to check an `invokeEndpoint` annotation, it suppose to point to http://{{ .Values.lb_dns_name }}:{{ .Values.fn_lb_runner.service.port }}.
So, you are ready to go:

    echo -e '{"name":"john"}' | fn invoke first-app first-fn

{{- if not  .Values.mysql.persistence.enabled }}

############################################################################
###   WARNING: Persistence is disabled!!! You will lose function and     ###
###   flow state when the MySQL pod is terminated.                       ###
###   See the README.md for instructions on configuring persistence.     ###
############################################################################
{{- end }}
